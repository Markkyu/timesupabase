import { useState, forwardRef } from "react";
import {
  Dialog,
  DialogTitle,
  DialogContent,
  TextField,
  Button,
  IconButton,
  Checkbox,
  FormControlLabel,
  Slide,
  Typography,
} from "@mui/material";
import CloseIcon from "@mui/icons-material/Close";
import { useNavigate } from "react-router-dom";
import useAuthStore from "../../stores/useAuthStore";

// Slide transition for dialog
const Transition = forwardRef(function Transition(props, ref) {
  return <Slide direction="up" ref={ref} {...props} />;
});

const LoginForm = ({ showLogin, setShowLogin }) => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);

  const login = useAuthStore((state) => state.login);
  const navigate = useNavigate();

  const handleLoginSubmit = async (e) => {
    e.preventDefault();
    try {
      const loggedInUser = await login(username, password);
      setShowLogin(false);
      navigate("/");
    } catch (err) {
      alert("Login failed");
    }
  };

  return (
    <Dialog
      open={showLogin}
      TransitionComponent={Transition}
      keepMounted
      onClose={() => setShowLogin(false)}
      fullWidth
      maxWidth="xs"
    >
      {/* Close button */}
      <IconButton
        onClick={() => setShowLogin(false)}
        sx={{
          position: "absolute",
          right: 12,
          top: 12,
          color: "grey.500",
        }}
      >
        <CloseIcon />
      </IconButton>

      <DialogTitle sx={{ pb: 1 }}>
        <Typography variant="h5" align="center">
          Login to Timelyfy
        </Typography>
      </DialogTitle>

      <DialogContent>
        <form onSubmit={handleLoginSubmit} style={{ marginTop: "1rem" }}>
          {/* Username */}
          <TextField
            label="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            fullWidth
            margin="normal"
            required
          />

          {/* Password */}
          <TextField
            label="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            type={showPassword ? "text" : "password"}
            fullWidth
            margin="normal"
            required
          />

          {/* Show password checkbox */}
          <FormControlLabel
            control={
              <Checkbox
                checked={showPassword}
                onChange={() => setShowPassword(!showPassword)}
                size="small"
              />
            }
            label={<Typography variant="body2">Show Password</Typography>}
          />

          {/* Submit button */}
          <Button
            type="submit"
            variant="contained"
            fullWidth
            sx={{
              mt: 3,
              bgcolor: "maroon",
              "&:hover": { bgcolor: "#7b1f1f" },
              py: 1.2,
              fontWeight: "bold",
            }}
          >
            Log In
          </Button>
        </form>
      </DialogContent>
    </Dialog>
  );
};

export default LoginForm;
